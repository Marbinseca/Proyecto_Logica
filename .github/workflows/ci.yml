# Nombre del flujo de trabajo
name: Python Application CI

# Define cuándo se ejecutará el flujo de trabajo
on:
  # Se ejecuta en cada push a la rama 'main'
  push:
    branches: [ "main" ]
  # Se ejecuta en cada pull request dirigido a la rama 'main'
  pull_request:
    branches: [ "main" ]

# Define los trabajos que se ejecutarán
jobs:
  build:
    # El tipo de máquina virtual en la que se ejecutará el trabajo
    runs-on: ubuntu-latest

    steps:
    # 1. Clona el repositorio en la máquina virtual
    - name: Checkout repository
      uses: actions/checkout@v4

    # 2. Configura el entorno de Python
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    # 3. Instala las dependencias del proyecto
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # 4. Ejecuta las pruebas con pytest
    - name: Run tests
      run: |
        pytest
      env:
        # Pasa la clave de API desde los Secrets de GitHub como una variable de entorno
        # para el paso de prueba. load_dotenv() en el script la leerá.
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}